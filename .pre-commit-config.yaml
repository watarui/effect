repos:
  # Rust フォーマッター
  - repo: local
    hooks:
      - id: rustfmt
        name: rustfmt
        description: Format Rust code
        entry: cargo fmt --
        language: system
        types: [rust]
        pass_filenames: true

  # Rust リンター（修正可能な警告を自動修正）
  - repo: local
    hooks:
      - id: clippy-fix
        name: clippy fix
        description: Auto-fix Rust code with clippy
        entry: cargo clippy --fix --allow-dirty --allow-staged --all-targets --all-features
        language: system
        types: [rust]
        pass_filenames: false

      - id: clippy-check
        name: clippy check
        description: Check Rust code with clippy
        entry: cargo clippy --all-targets --all-features -- -D warnings
        language: system
        types: [rust]
        pass_filenames: false

  # Rust テスト
  - repo: local
    hooks:
      - id: cargo-test
        name: cargo test
        description: Run Rust tests
        entry: cargo test --all
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-push]

  # Cargo.toml チェック
  - repo: local
    hooks:
      - id: cargo-check
        name: cargo check
        description: Check Rust code compilation
        entry: cargo check --all
        language: system
        types: [rust]
        pass_filenames: false

  # 汎用的なファイルチェック
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # 末尾の空白を削除
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      # ファイル末尾に改行を追加
      - id: end-of-file-fixer
      # YAML ファイルの構文チェック
      - id: check-yaml
        exclude: ^.*\.yaml\.example$
      # JSON ファイルの構文チェック
      - id: check-json
      # TOML ファイルの構文チェック
      - id: check-toml
      # マージコンフリクトマーカーのチェック
      - id: check-merge-conflict
      # 大きなファイルの追加を防ぐ
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      # 実行可能ファイルにシェバンがあることを確認
      - id: check-executables-have-shebangs
      # シェバンのあるファイルが実行可能であることを確認
      - id: check-shebang-scripts-are-executable
      # シンボリックリンクのチェック
      - id: check-symlinks
      # ケースコンフリクトのチェック
      - id: check-case-conflict
      # プライベートキーの検出
      - id: detect-private-key

  # Markdown リンター
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ["--fix"]

  # Docker ファイルのリンター
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ["--ignore", "DL3008", "--ignore", "DL3009"]

  # シークレットスキャン
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets

# グローバル設定
default_language_version:
  python: python3
default_stages: [pre-commit]
fail_fast: false
