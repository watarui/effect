name: Generate PlantUML Diagrams
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
jobs:
  generate:
    # PR の場合はマージされた時のみ実行
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup PlantUML environment
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
          wget -O plantuml.jar https://github.com/plantuml/plantuml/releases/download/v1.2024.0/plantuml.jar
      - name: Generate SVG diagrams
        run: |
          # エラーハンドリングを有効化
          set -e

          # 処理対象のファイル数をカウント
          puml_count=$(find docs -name "*.puml" | wc -l)
          echo "Found $puml_count PlantUML files to process"

          # すべての .puml ファイルを検索して処理
          find docs -name "*.puml" | while read puml; do
            echo "Processing: $puml"

            # ディレクトリとファイル名を取得
            dir=$(dirname "$puml")
            filename=$(basename "$puml" .puml)

            # svg サブディレクトリを作成
            mkdir -p "$dir/svg"

            # SVG を生成
            if java -jar plantuml.jar -tsvg -o "$(pwd)/$dir/svg" "$puml"; then
              echo "✓ Generated: $dir/svg/$filename.svg"
            else
              echo "✗ Failed to generate: $puml"
              exit 1
            fi
          done

          echo "Successfully processed all PlantUML files"

          # 生成されたSVGファイルを確認
          echo ""
          echo "Generated SVG files:"
          find docs -name "*.svg" -path "*/svg/*" | sort
      - name: Check for changes
        id: check_changes
        run: |
          # 生成されたSVGファイルを明示的に追加
          find docs -name "*.svg" -path "*/svg/*" -exec git add {} \;

          if git diff --quiet && git diff --staged --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            # 変更されたファイルを表示
            echo "Changed files:"
            git diff --name-only
            git diff --staged --name-only
          fi
      - name: Commit generated images
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # コミット（[skip ci] タグを付けて無限ループを防止）
          git commit -m "Auto-generate PlantUML diagrams [skip ci]"

          # プッシュ
          git push
      - name: Summary
        if: always()
        run: |-
          echo "## PlantUML Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ SVG diagrams were generated and committed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Generated files:" >> $GITHUB_STEP_SUMMARY
            find docs -name "*.svg" -path "*/svg/*" | while read svg; do
              echo "- $svg" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "ℹ️ No changes detected - SVG files are up to date" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Existing SVG files:" >> $GITHUB_STEP_SUMMARY
            if [ -z "$(find docs -name "*.svg" -path "*/svg/*")" ]; then
              echo "_No SVG files found in the repository_" >> $GITHUB_STEP_SUMMARY
            else
              find docs -name "*.svg" -path "*/svg/*" | while read svg; do
                echo "- $svg" >> $GITHUB_STEP_SUMMARY
              done
            fi
          fi
